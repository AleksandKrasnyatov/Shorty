services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.12-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"  # Web UI: http://localhost:15672
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 15s
      timeout: 10s
      retries: 3

  swagger-ui:
    image: swaggerapi/swagger-ui:v5.11.0
    environment:
      URL: /openapi.yaml
    volumes:
      - ./openapi/openapi.yaml:/openapi.yaml
    ports:
      - "8080:8080"
    depends_on:
      - link-service
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./link-service/api/web:/var/www/web
    depends_on:
      - link-service

  link-service:
    build:
      context: ./link-service/api
      dockerfile: Dockerfile
    environment:
      YII_ENV: ${YII_ENV:-dev}
      YII_DEBUG: ${YII_DEBUG:-true}
      DB_HOST: postgres
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      COMPOSER_ALLOW_SUPERUSER: 1
    volumes:
      - ./link-service/api:/var/www:cached
      - ./phpstan.neon:/var/www/phpstan.neon
      - ./phpcs.xml:/var/www/phpcs.xml
      - ./psalm.xml:/var/www/psalm.xml
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
  redisdata: