.DEFAULT_GOAL := help
MAKEFLAGS += --silent

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED    = \033[0;31m
GREEN  = \033[0;32m
YELLOW = \033[0;33m
BLUE   = \033[0;36m
NC     = \033[0m

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
SERVICE_CONTAINER = link-service
TEST_CONTAINER    = link-service
COMPOSE_FILE      = docker-compose.yml

# –ö–æ–º–∞–Ω–¥—ã
YII      = php yii
COMPOSER = composer
CODECEPT = vendor/bin/codecept
PHPSTAN  = vendor/bin/phpstan
PHPCS    = vendor/bin/phpcs
PHPCBF   = vendor/bin/phpcbf
PSALM    = vendor/bin/psalm

# –ü–æ–º–æ—â—å
.PHONY: help
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
	@echo ""
	@echo "üõ†Ô∏è  Shorty ‚Äî —Å–µ—Ä–≤–∏—Å –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Å—ã–ª–æ–∫"
	@echo ""
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / { \
		printf "  ${BLUE}%-25s${NC} ${YELLOW}%s${NC}\n", $$1, $$2 \
	}' $(MAKEFILE_LIST)
	@echo ""

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
.PHONY: up
up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë (–≤ —Ñ–æ–Ω–µ)
	docker-compose -f $(COMPOSE_FILE) up -d

.PHONY: down
down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—ë
	docker-compose -f $(COMPOSE_FILE) down

.PHONY: build
build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	docker-compose -f $(COMPOSE_FILE) build

.PHONY: logs
logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	docker-compose -f $(COMPOSE_FILE) logs -f

# Yii2 –∫–æ–º–∞–Ω–¥—ã
.PHONY: yii
yii: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Yii2 –∫–æ–º–∞–Ω–¥—É: make yii migrate
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(YII) $(filter-out $@,$(MAKECMDGOALS))

%:
	@:

.PHONY: migrate
migrate: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(YII) migrate --interactive=0

.PHONY: migrate-down
migrate-down: ## –û—Ç–∫–∞—Ç–∏—Ç—å N –º–∏–≥—Ä–∞—Ü–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)
	@COUNT=$(or $(filter-out $@,$(MAKECMDGOALS)),1); \
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(YII) migrate/down $$COUNT --interactive=0

.PHONY: migrate-new
migrate-new: ## –°–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é: make migrate-new create_links_table
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(YII) migrate/create $(filter-out $@,$(MAKECMDGOALS))

# Composer
.PHONY: composer
composer: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Composer: make composer install
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(COMPOSER) $(filter-out $@,$(MAKECMDGOALS))

.PHONY: codecept
test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Codeception: make test functional
	docker-compose -f $(COMPOSE_FILE) exec $(TEST_CONTAINER) $(CODECEPT) run $(filter-out $@,$(MAKECMDGOALS))

.PHONY: build-tester
build-tester: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å FunctionalTester
	docker-compose -f $(COMPOSE_FILE) exec $(TEST_CONTAINER) $(CODECEPT) build

# –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
.PHONY: phpstan
phpstan: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å PHPStan
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(PHPSTAN) analyse $(filter-out $@,$(MAKECMDGOALS))

.PHONY: phpcs
phpcs: ## php _CodeSniffer
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(PHPCS) $(filter-out $@,$(MAKECMDGOALS))

.PHONY: phpcbf
phpcbf: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–ª—å –∫–æ–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(PHPCBF) $(filter-out $@,$(MAKECMDGOALS))

.PHONY: psalm
psalm: ## Psalm
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(PSALM) $(filter-out $@,$(MAKECMDGOALS))

.PHONY: psalm-fix
psalm-fix: ## Psalm auto fix
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) $(PSALM) --alter --issues=InvalidReturnType --dry-run

# Shell
.PHONY: shell
shell: ## –ó–∞–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_CONTAINER) sh

.PHONY: db-shell
db-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL
	docker-compose -f $(COMPOSE_FILE) exec postgres psql -U shorty -d shorty